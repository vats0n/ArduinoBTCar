
#include <Servo.h>  
const int trigPin = 9;
const int echoPin = 8;
const int lm1=7;
const int lm2=6;
const int rm1=5;
const int rm2=4;
const int servoPin=10;
SoftwareSerial BT(0, 1);
String readvoice;
Servo myservo;
long duration;
int distance;
int distance_f;
int distance_r;
int distance_l;
int maxLowDistance=70;

void setup() {
BT.begin(9600);
pinMode(trigPin, OUTPUT); 
pinMode(echoPin, INPUT); 
pinMode(lm1,OUTPUT);
pinMode(lm2,OUTPUT);
pinMode(rm1,OUTPUT);
pinMode(rm2,OUTPUT);
myservo.attach(servoPin);
myservo.write(90);
Serial.begin(9600); 
}
void loop() {


  while (BT.available()){  
  delay(10); 
  char c = BT.read(); 
  readvoice += c; 
  } 
  if (readvoice.length() > 0) {
  
  Serial.println(readvoice);

  if(readvoice == "*forward#")
  {
 front();
    delay(100);
  }

  else if(readvoice == "*back#")
  {
back();
    delay(100);
  }

  else if (readvoice == "*left#")
  {
   left();
    delay(100);
  
  }

 else if ( readvoice == "*right#")
 {
   right();
    delay(100);
 }

 else if (readvoice == "*stop#")
 {
  brake();
   delay (1000);
 }
  readvoice="";
  }
  

   distance_f=ping();
   if(distance_f > maxLowDistance){
     front();
     delay(400);
   }else{
      Break();
      get_Distance();
      if(distance_r > maxLowDistance){
        right();
        delay(400);
        front();
      }else if(distance_l > maxLowDistance){
        left();
        delay(400);
        front();
      }else{
        back();
        delay(400);
        Break();
      }
    
   }
}
void displayDistance(){
     Serial.print("Right Distance : ");
     Serial.print(distance_r);
     Serial.println("");
     Serial.print("Front Distance : ");
     Serial.print(distance_f);
     Serial.println("");
     Serial.print("Left Distance : ");
     Serial.print(distance_l);
     Serial.println("");
  
}
void front(){
Serial.println("Forward Move");
digitalWrite(lm2,HIGH);
digitalWrite(rm2,HIGH);
digitalWrite(lm1,LOW);
digitalWrite(rm1,LOW);

}
void back(){
    Serial.println("Back Move");
    digitalWrite(lm1,HIGH);
    digitalWrite(rm1,HIGH);
    digitalWrite(lm2,LOW);
    digitalWrite(rm2,LOW);
}
void left(){
  digitalWrite(rm2,HIGH);
  digitalWrite(rm1,LOW);
  digitalWrite(lm1,HIGH);
  digitalWrite(lm2,LOW);
}
void right(){
  digitalWrite(lm2,HIGH);
  digitalWrite(lm1,LOW);
  digitalWrite(rm1,HIGH);
  digitalWrite(rm2,LOW);
}
void Brake(){
  digitalWrite(lm2,LOW);
  digitalWrite(lm1,LOW);
  digitalWrite(rm1,LOW);
  digitalWrite(rm2,LOW);
}

void get_Distance(){
  myservo.write(0);
  delay(500);
  int temp_r1=ping();
  myservo.write(45);
  delay(500);
  int temp_r2=ping();
  if(temp_r1<temp_r2){
    distance_r=temp_r1;
  }else{
    distance_r=temp_r2;
  }
  myservo.write(90);
  delay(500);
  distance_f=ping();
  
  myservo.write(135);
  delay(500);
  int temp_l1=ping();
  myservo.write(180);
  delay(500);
  int temp_l2=ping();
  if(temp_l1<temp_l2){
    distance_l=temp_l1;
  }else{
    distance_l=temp_l2;
  }
  myservo.write(90);
  
}

int ping(){
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance= duration*0.034/2;
  return distance;
}        
